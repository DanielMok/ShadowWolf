#!/bin/bash

read -r -d '' USAGE <<HERE
Usage: $0 <command> <target> [args]
Try '$0 help' for more info.
HERE
read -r -d '' HELP <<HERE
Usage: $0 <command> <target>

Commands:
  dev     Development commands like \`rails s\` and \`grunt server\`.
  prod    Production environment, currently only supports console.
  build   Build docker images.
  deploy  Push images to the BVN server and start them up.
  run     (No targets) Runs whatever commands are passed to it in the
          container.
  help    Print this text.

Targets:
  client  Angular frontend. Also starts the server.
  test    Runs protractor tests in phantomjs container.
  server  Rails backend. Also starts mongo.
  mongo   (Dev only) Mongodb service.
  console Rails console. Assumes mongo.

Run '$0 dev client' to get a full working environment.
HERE

SHARED_VOLUME=`pwd`:/ShadowWolf/
BASE_ARGS="-t -v $SHARED_VOLUME "
DEFAULT_ARGS="-d $BASE_ARGS "
case "$1" in
  dev)
    case "$2" in
      test)
        echo This is disabled while we work on some internals.
        exit 1
        [[ -z `docker ps | grep -e "sw-client[^/]"` ]] && $0 dev client
        [[ -z `docker ps | grep -e "sw-webdriver[^/]"` ]] && $0 dev webdriver
        SUITE="all"
        if [[ -n "$3" ]];
        then SUITE="$3"
        fi

        docker kill sw-testing && docker rm sw-testing
        docker run --name sw-testing -i $BASE_ARGS --link sw-webdriver:webdriver --link sw-client:client -w /ShadowWolf/client/ shadowwolf-dev-testing protractor Protractor.js --suite $SUITE && notify-send "ShadowWolf Tests" Done || notify-send "ShadowWolf Tests" Fail
        ;;
      webdriver)
        echo This is disabled while we work on some internals.
        exit 1
        docker kill sw-webdriver && docker rm sw-webdriver
        docker run --name sw-webdriver $DEFAULT_ARGS -p 4444 -w /ShadowWolf/client/ shadowwolf-dev-testing webdriver-manager start
        ;;
      client)
        fig up -d devGrunt
        ;;
      server)
        fig up -d devRails
        ;;
      console)
        fig run --rm devConsole
        ;;
      mongo)
        fig up -d devMongo
        ;;
      *)
        echo "$USAGE"
        ;;
    esac
    ;;
  build)
    case "$2" in
      client)
        fig run --rm --no-deps devGrunt grunt build \
          && fig build prodAngular
        ;;
      server)
        fig build prodRails
        ;;
      *)
        echo "$USAGE"
        exit 1
        ;;
    esac
    ;;
  deploy)
    if [[ -z $BVN_SERVER ]]
    then
      read -p "BVN_SERVER is not defined for this environment, please enter the address for BVN_SERVER: " BVN_SERVER
    fi
    case "$2" in
      client)
        image=`docker images | egrep '^ShadowWolf_prodAngular' | grep latest | awk '{print $3}'`
        docker tag $image $BVN_SERVER:5000/shadowwolf-deploy-client
        docker push $BVN_SERVER:5000/shadowwolf-deploy-client
        remote_script="
        docker pull $BVN_SERVER:5000/shadowwolf-deploy-client > /dev/null;
        docker rm -f sw-client;
        docker run -d --name sw-client --link sw-server:server -p 9000:9000 -e SERVER_PORT_3000_TCP_ADDR=$BVN_SERVER $BVN_SERVER:5000/shadowwolf-deploy-client;
        "
        ssh $USER@$BVN_SERVER $remote_script
        ;;
      server)
        image=`docker images | egrep '^ShadowWolf_prodRails' | grep latest | awk '{print $3}'`
        docker tag $image $BVN_SERVER:5000/shadowwolf-deploy-server
        docker push $BVN_SERVER:5000/shadowwolf-deploy-server
        remote_script="
        docker pull $BVN_SERVER:5000/shadowwolf-deploy-server > /dev/null;
        docker rm -f sw-client ; docker rm -f sw-server;
        docker run -d --name sw-server --link sw-mongo:mongo -p 3000:3000 $BVN_SERVER:5000/shadowwolf-deploy-server;
        docker run -d --name sw-client --link sw-server:server -p 9000:9000 -e SERVER_PORT_3000_TCP_ADDR=$BVN_SERVER $BVN_SERVER:5000/shadowwolf-deploy-client;
        TZ='Australia/Sydney' nohup docker logs -f sw-server > /home/dave/logs/`date --iso-8601=minutes` &
        "
        ssh $USER@$BVN_SERVER $remote_script
        ;;
    esac
    ;;
  prod)
    if [[ -z $BVN_SERVER ]]
    then
      read -p "BVN_SERVER is not defined for this environment, please enter the address for BVN_SERVER: " BVN_SERVER
    fi
    case "$2" in
      console)
        remote_script="
          docker run -i -t --rm --link sw-mongo:mongo $BVN_SERVER:5000/shadowwolf-deploy-server console -e production;
        "
        ssh $USER@$BVN_SERVER $remote_script
      ;;
    esac
    ;;
  run)
    shift
    COMMAND="bash"
    [[ -n "$*" ]] && COMMAND="$*"
    docker run -i -t -v $SHARED_VOLUME shadowwolf-dev $COMMAND
    ;;
  help)
    echo "$HELP"
    ;;
  *)
    echo "$USAGE"
    ;;
esac
