project:
  fields:
  - name: project_number
    type: string
    factory: |
      { ((0..20).to_a.sample.years.ago + (1..345).to_a.sample.days) + "." + (Faker::Base::ULetters.sample)+ (Faker::Base::ULetters.sample)+ (Faker::Base::ULetters.sample) }

non_building:
  fields:
  - name: description
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  relation:
    parent: project
    type: embeds_one

building:
  fields:
  - name: description
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  - name: attribution
    type: string
    factory: |
      { TODO }
  - name: BCA_classification
    type: string
    factory: |
      { TODO }
  - name: project_catagories
    type: array
    factory: |
      { TODO }
   - name: project_sub-catagories
    type: array
    factory: |
      { TODO }
  relation:
    parent: project
    type: embeds_one

location:
  fields:[]
  relation:
    parent: building
    type: embeds_one

geoJSON:
  fields:
  - name: lat
    type: double
    factory: |
      { TODO }
  - name: lon
    type: double
    factory: |
      { TODO }
  - name: boundary_points
    type: array
    factory: |
      { TODO }
  relation:
    parent: location
    type: embeds_one

address:
  fields:
  - name: name
    type: string
    factory: |
      { TODO }
  - name: street_number
    type: string
    factory: |
      { TODO }
  - name: street
    type: string
    factory: |
      { TODO }
  - name: suburb_area
    type: string
    factory: |
      { TODO }
  - name: state_county
    type: string
    factory: |
      { TODO }
  - name: country
    type: string
    factory: |
      { TODO }
  - name: postcode
    type: string
    factory: |
      { TODO }
  relation:
    parent: location
    type: embeds_one

project_source:
  fields:
  - name: competition_win
    type: boolean
    factory: |
      { TODO }
  - name: competition_URL
    type: string
    factory: |
      { TODO }
  relation:
    parent: building
    type: embeds_one

referred_by:
  fields:
  - name: BVN_staff_login
    type: string
    factory: |
      { (Faker::Base::ULetters.sample + Faker::Name.last_name ).downcase }
  - name: contact_name
    type: string
    factory: |
      { TODO }
  - name: contact_organisation
    type: string
    factory: |
      { TODO }
  relation:
    parent: project_source
    type: embeds_one

dims:
  fields:[]
  relation:
    parent: building
    type: embeds_one

height:
  fields:
  - name:measurement
    type:double
    factory: |
      { TODO }
  - name:standard_name
    type:string
    factory: |
      { TODO }
  - name:standard_version
    type:string
    factory: |
      { TODO }
  relation:
    parent: dims
    type: embeds_one

footprint_area:
  fields:
  - name:measurement
    type:double
    factory: |
      { TODO }
  - name:standard_name
    type:string
    factory: |
      { TODO }
  - name:standard_version
    type:string
    factory: |
      { TODO }
  relation:
    parent: dims
    type: embeds_one

GBA:
  fields:
  - name:measurement
    type:double
    factory: |
      { TODO }
  - name:standard_name
    type:string
    factory: |
      { TODO }
  - name:standard_version
    type:string
    factory: |
      { TODO }
  relation:
    parent: dims
    type: embeds_one

GFA:
  fields:
  - name:measurement
    type:double
    factory: |
      { TODO }
  - name:standard_name
    type:string
    factory: |
      { TODO }
  - name:standard_version
    type:string
    factory: |
      { TODO }
  relation:
    parent: dims
    type: embeds_one

NLA:
  fields:
  - name:measurement
    type:double
    factory: |
      { TODO }
  - name:standard_name
    type:string
    factory: |
      { TODO }
  - name:standard_version
    type:string
    factory: |
      { TODO }
  relation:
    parent: dims
    type: embeds_one

client:
  fields:
  - name:main
    type:string
    factory: |
      { TODO }
  - name:direct
    type:string
    factory: |
      { TODO }
  - name:end_user
    type:string
    factory: |
      { TODO }
  relation:
    parent: building
    type: embeds_one

relationships:
  fields:
  - name:client
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  - name:stakeholder
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  - name:councils
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  relation:
    parent: building
    type: embeds_one

phase:
  fields:
  - name:project_name
    type:string
    factory: |
      { TODO }
  - name:studio
    type:string
    factory: |
      { TODO }
  - name:client
    type:string
    factory: |
      { TODO }
  - name:services_scope
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  - name:delivery_contract
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  - name:staff_contact_login
    type:string
    factory: |
      { (Faker::Base::ULetters.sample + Faker::Name.last_name ).downcase }
  - name:staff_custodian_login
    type:string
    factory: |
      { (Faker::Base::ULetters.sample + Faker::Name.last_name ).downcase }
  relation:
    parent: building
    type: embeds_one

key_date:
  fields:
  - name:start_date
    type:date
    factory: |
      { (10..20).to_a.sample.years.ago + (1..345).to_a.sample.days }
  - name:end_date
    type:date
    factory: |
      { (0..10).to_a.sample.years.ago + (1..345).to_a.sample.days }
  relation:
    parent: phase
    type: embeds_one

other_dates:
  fields:
  - name:date
    type:date
    factory: |
      { (0..20).to_a.sample.years.ago + (1..345).to_a.sample.days }
  - name:description
    type:string
    factory: |
      { TODO }
  relation:
    parent: key_date
    type: embeds_many

budget:
  fields:
  - name:initial_phase_value_total
    type:double
    factory: |
      { TODO }
  - name:final_phase_value_total
    type:double
    factory: |
      { TODO }
  - name:initial_phase_fee_total
    type:double
    factory: |
      { TODO }
  - name:final_phase_fee_total
    type:double
    factory: |
      { TODO }
  - name:construction_initial
    type:double
    factory: |
      { TODO }
  - name:construction_final
    type:double
    factory: |
      { TODO }
  - name:comments
    type:text
    factory: |
      { TODO }
  - name:fee_type
    type:string
    factory: |
      { TODO }
  relation:
    parent: phase
    type: embeds_one

legacy:
  fields:
  - name:one_line_grab
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  - name:description_project_sheet
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  - name:description_awards_style
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  - name:innovation_client_style
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  - name:interesting_things
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  - name:brief_elements
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  - name:security_level
    type:string
    factory: |
      { TODO }
  relation:
    parent: building
    type: embeds_one

ESD:
  fields:[]
  relation:
    parent: legacy
    type: embeds_one

initiatives:
  fields:
  - name:title
    type:string
    factory: |
      { TODO }
  - name:reason
    type:string
    factory: |
      { TODO }
  - name:description
    type:string
    factory: |
      { TODO }
  relation:
    parent: ESD
    type: embeds_many

certifications:
  fields:
  - name:name
    type:string
    factory: |
      { TODO }
  - name:ranking
    type:string
    factory: |
      { TODO }
  - name:awarding_body
    type:string
    factory: |
      { TODO }
  - name:expiry_date
    type:date
    factory: |
      { TODO }
  relation:
    parent: ESD
    type: embeds_many

photography:
  fields:
  -name:photographer
   type:string
   factory: |
      { TODO }
  - name:date
    type:date
    factory: |
      { TODO }
  relation:
    parent: legacy
    type: embeds_one

awards:
  fields:
  -name:award
   type:string
   factory: |
      { TODO }
  - name:date
    type:date
    factory: |
      { (0..20).to_a.sample.years.ago + (1..345).to_a.sample.days }
  - name:jury
    type:array
    factory: |
      { TODO }
  relation:
    parent: legacy
    type: embeds_one

testimonials:
  fields:
  -name:testimonial
   type:text
   factory: |
      { TODO }
  - name:date
    type:date
    factory: |
      { (0..20).to_a.sample.years.ago + (1..345).to_a.sample.days }
  - name:citation
    type:string
    factory: |
      { TODO }
  relation:
    parent: legacy
    type: embeds_one

quotes:
  fields:
  -name:quote
   type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  - name:date
    type:date
    factory: |
      { (0..20).to_a.sample.years.ago + (1..345).to_a.sample.days }
  - name:citation
    type:array
    factory: |
      { TODO }
  relation:
    parent: legacy
    type: embeds_one

press:
  fields: []
  relation:
    parent: building
    type: embeds_one

attention:
  fields:
  - name: date
    type: date
    factory: |
      { (0..10).to_a.sample.years.ago + (1..345).to_a.sample.days }
  - name: url
    type: string
    factory: |
      { 'http://'+ Faker::Internet.domain_name + '/stories/' + ['style_section','business','theatre'].sample }
  - name: scan_or_screengrab
    type: string
    factory: |
      { 'http://'+ Faker::Internet.domain_name + '/images/' + Faker::Number.number(20) + 'screencap.jpg' }
  - name: body_text
    type: text
    factory: |
      { Faker::Lorem.paragraphs(paragraph_count = 8).join('<br>') }
  - name: publication
    type: string
    factory: |
      { Faker::Company.bs + ' weekly' }
  - name: reason
    type: string
    factory: |
      { ['reactive', 'planned', 'response to release'].sample }
  relation:
    parent: press
    type: embeds_many

campaign:
  fields:
  - name:strategy
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  relation:
    parent: press
    type: embeds_many

press_release:
  - name:date
    type:date
    factory: |
      { TODO }
  - name:channel_list
    type:string
    factory: |
      { TODO }
  - name:content
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  - name:author_login
    type:string
    factory: |
      { (Faker::Base::ULetters.sample + Faker::Name.last_name ).downcase }
  relation:
    parent: campaign
    type: embeds_many

QA:
  fields:
  - name:notes
    type: text
    factory: |
      { Faker::Lorem.paragraphs.join('<br>') }
  relation:
    parent: building
    type: embeds_many
